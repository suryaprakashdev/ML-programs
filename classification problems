# Import necessary libraries
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import matplotlib.pyplot as plt
import numpy as np 
# Sample data
marks = np.array([23, 45, 67, 89, 12, 34, 56, 78, 90, 21])
labels = ['fail', 'pass', 'pass', 'pass', 'fail', 'fail', 'pass', 'pass', 'pass', 'fail']

# Convert labels to numerical values (0 for fail, 1 for pass)
labels = [0 if label == 'fail' else 1 for label in labels]

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(marks, labels, test_size=0.2, random_state=42)

# Create a logistic regression model
model = LogisticRegression()

# Train the model
model.fit(X_train.reshape(-1, 1), y_train)

# Make predictions on the test set
predictions = model.predict(X_test.reshape(-1, 1))

# Evaluate the model
print("Accuracy:", accuracy_score(y_test, predictions))
print("Classification Report:")
print(classification_report(y_test, predictions))

# Plot the classification results
plt.figure(figsize=(8, 6))
plt.scatter(X_test, y_test, c=predictions, cmap='viridis')
plt.xlabel('Marks')
plt.ylabel('Label')
plt.title('Binary Classification')
plt.show()

# Plot the confusion matrix
conf_mat = confusion_matrix(y_test, predictions)
plt.figure(figsize=(8, 6))
plt.imshow(conf_mat, interpolation='nearest')
plt.title('Confusion Matrix')
plt.colorbar()
plt.xlabel('Predicted Label')
plt.ylabel('True Label')
plt.show()
